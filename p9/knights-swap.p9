set(production).

formulas(demodulators).
% nimic = 0.
% negru = 1.
% alb = 2.
n = 3.
end_of_list.

formulas(usable).
% J(x, y, 0) | J(x, y, 1) | J(x, y, 2).

%prima incercare
%schimbarea starii
% J(x, y, alb) & x > 1 & y < (n + -1) & J(x + -2, y + 1, nimic) -> J(x + -2, y + 1, alb) & J(x, y, nimic) #answer("sus_dreapta").
% J(x, y, negru) & x > 1 & y < (n + -1) & J(x + -2, y + 1, nimic) -> J(x + -2, y + 1, negru) & J(x, y, nimic) #answer("sus_dreapta").

% J(x, y, alb) & x > 1 & y > 0 & J(x + -2, y + -1, nimic) -> J(x + -2, y + -1, alb) & J(x, y, nimic) #answer("sus_stanga").
% J(x, y, negru) & x > 1 & y > 0 & J(x + -2, y + -1, nimic) -> J(x + -2, y + -1, negru) & J(x, y, nimic) #answer("sus_stanga").


% J(x, y, alb) & x > 0 & y > 2 & J(x + -1, y + -2, nimic) -> J(x + -1, y + -2, alb) & J(x, y, nimic) #answer("stanga_sus").
% J(x, y, negru) & x > 0 & y > 2 & J(x + -1, y + -2, nimic) -> J(x + -1, y + -2, negru) & J(x, y, nimic) #answer("stanga_sus").


% J(x, y, alb) & x < (n + -1) & y > 2 & J(x + 1, y + -2, nimic) -> J(x + 1, y + -2, alb) & J(x, y, nimic) #answer("stanga_jos").
% J(x, y, negru) & x < (n + -1) & y > 2 & J(x + 1, y + -2, nimic) -> J(x + 1, y + -2, negru) & J(x, y, nimic) #answer("stanga_jos").


% J(x, y, alb) & x > 0 & y < (n + -2) & J(x + -1, y + 2, nimic) -> J(x + -1, y + 2, alb) & J(x, y, nimic)  #answer("dreapta_sus").
% J(x, y, negru) & x > 0 & y < (n + -2) & J(x + -1, y + 2, nimic) -> J(x + -1, y + 2, negru) & J(x, y, nimic)  #answer("dreapta_sus").


% J(x, y, alb) & x < (n + -1) & y < (n + -2) & J(x + 1, y + 2, nimic)  -> J(x + 1, y + 2, alb) & J(x, y, nimic) #answer("dreapta_jos").
% J(x, y, negru) & x < (n + -1) & y < (n + -2) & J(x + 1, y + 2, nimic) -> J(x + 1, y + 2, negru) & J(x, y, nimic) #answer("dreapta_jos").


% J(x, y, alb) & x < (n + -2) & y > 0 & J(x + 2, y + -1, nimic) -> J(x + 2, y + -1, alb) & J(x, y, nimic) #answer("jos_stanga").
% J(x, y, negru) & x < (n + -2) & y > 0 & J(x + 2, y + -1, nimic) -> J(x + 2, y + -1, negru) & J(x, y, nimic) #answer("jos_stanga").


% J(x, y, alb) & x < (n + -2) & y < (n + -1) & J(x + 2, y + 1, nimic) -> J(x + 2, y + 1, alb) & J(x, y, nimic) #answer("jos_dreapta").
% J(x, y, negru) & x < (n + -2) & y < (n + -1) & J(x + 2, y + 1, nimic) -> J(x + 2, y + 1, negru) & J(x, y, nimic) #answer("jos_dreapta").

%a doua cu numere 
J(x, y, wcode) & x > 1 & y < (n + -1) & J(x + -2, y + 1, 0) & wcode!= 0 -> J(x + -2, y + 1, wcode) & J(x, y, 0) #answer("sus_dreapta").

J(x, y, wcode) & x > 1 & y > 0 & J(x + -2, y + -1, 0) & wcode != 0 -> J(x + -2, y + -1, wcode) & J(x, y, 0) #answer("sus_stanga").


J(x, y, wcode) & x > 0 & y > 1 & J(x + -1, y + -2, 0) & wcode != 0 -> J(x + -1, y + -2, wcode) & J(x, y, 0) #answer("stanga_sus").

J(x, y, wcode) & x < (n + -1) & y > 1 & J(x + 1, y + -2, 0) & wcode != 0 -> J(x + 1, y + -2, wcode) & J(x, y, 0) #answer("stanga_jos").


J(x, y, wcode) & x > 0 & y < (n + -2) & J(x + -1, y + 2, 0) & wcode != 0 -> J(x + -1, y + 2, wcode) & J(x, y, 0)  #answer("dreapta_sus").

J(x, y, wcode) & x < (n + -1) & y < (n + -2) & J(x + 1, y + 2, 0) & wcode != 0  -> J(x + 1, y + 2, wcode) & J(x, y, 0) #answer("dreapta_jos").

J(x, y, wcode) & x < (n + -2) & y > 0 & J(x + 2, y + -1, 0) & wcode != 0 -> J(x + 2, y + -1, wcode) & J(x, y, 0) #answer("jos_stanga").

J(x, y, wcode) & x < (n + -2) & y < (n + -1) & J(x + 2, y + 1, 0) & wcode != 0 -> J(x + 2, y + 1, wcode) & J(x, y, 0) #answer("jos_dreapta").
end_of_list.

formulas(assumptions).

% nimic <-> 0.
% negru <-> 1.
% alb <-> 2.

% J(x, y, nimic) | J(x, y, negru) | J(x, y, alb).

% J(0, 0, negru) & J(0, 1, negru) & J(0, 2, negru) & J(0, 3, negru) & 
% J(1, 0, negru) & J(1, 1, negru) & J(1, 2, nimic) & J(1, 3, negru) & 
% J(2, 0, alb) & J(2, 1, nimic) & J(2, 2, alb) & J(2, 3, alb) &
% J(3, 0, alb) & J(3, 1, alb) & J(3, 2, alb) & J(3, 3, alb).

% nimic | negru | alb
J(x, y, 0) -> -J(x, y, 1).
J(x, y, 0) -> -J(x, y, 2).
J(x, y, 1) -> -J(x, y, 2).


% J(0, 0, 1) & J(0, 1, 1) & J(0, 2, 1) & J(0, 3, 1) & 
% J(1, 0, 1) & J(1, 1, 1) & J(1, 2, 0) & J(1, 3, 1) & 
% J(2, 0, 2) & J(2, 1, 0) & J(2, 2, 2) & J(2, 3, 2) &
% J(3, 0, 2) & J(3, 1, 2) & J(3, 2, 2) & J(3, 3, 2).

% J(0, 0, 1) & J(0, 1, 0) & J(0, 2, 1) &
% J(1, 0, 0) & J(1, 1, 0) & J(1, 2, 0) &
% J(2, 0, 2) & J(2, 1, 0) & J(2, 2, 2).

J(0, 0, 1) & J(0, 1, 0) & J(0, 2, 0) &
J(1, 0, 0) & J(1, 1, 0) & J(1, 2, 0) &
J(2, 0, 0) & J(2, 1, 0) & J(2, 2, 2).


end_of_list.


formulas(goals).
% Vreau sa vizitez toate starile -> folosesc scriptul de mai jos pt generarea tuturor starilor tintite!
%tinta pentru 6x6
% J(0, 0, alb) & J(0, 1, alb) & J(0, 2, alb) & J(0, 3, alb) & 
% J(1, 0, alb) & J(1, 1, alb) & J(1, 2, nimic) & J(1, 3, alb) & 
% J(2, 0, negru) & J(2, 1, nimic) & J(2, 2, negru) & J(2, 3, negru) &
% J(3, 0, negru) & J(3, 1, negru) & J(3, 2, negru) & J(3, 3, negru). 


% J(0, 0, 2) & J(0, 1, 2) & J(0, 2, 2) & J(0, 3, 2) & 
% J(1, 0, 2) & J(1, 1, 2) & J(1, 2, 0) & J(1, 3, 2) & 
% J(2, 0, 1) & J(2, 1, 0) & J(2, 2, 1) & J(2, 3, 1) &
% J(3, 0, 1) & J(3, 1, 1) & J(3, 2, 1) & J(3, 3, 1). 

% J(0, 0, 2) & J(0, 1, 0) & J(0, 2, 2) & 
% J(1, 0, 0) & J(1, 1, 0) & J(1, 2, 0) &
% J(2, 0, 1) & J(2, 1, 0) & J(2, 2, 1).

J(0, 0, 0) & J(0, 1, 2) & J(0, 2, 0) &
J(1, 0, 0) & J(1, 1, 0) & J(1, 2, 0) &
J(2, 0, 0) & J(2, 1, 1) & J(2, 2, 0).


end_of_list.